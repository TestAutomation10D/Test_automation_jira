name: Run Manual workflow for PR TEST
on:
  workflow_dispatch:
    inputs:
      test_dir:
        type: choice
        description: What suite to run
        required: false
        options:
        - run_test
jobs:
  Run_Selected_Tests:
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      
#      - uses: actions/checkout@v3
#      - uses: actions/setup-python@v4
#        with:
#          python-version: '3.9'
#          cache: 'pip' # caching pip dependencies

      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      - name: GET Pull Request Information
        run: |
          export GIT_PR_NUMBER="1234" 
          echo GIT_REPOSITORY_NAME="${{ github.event.repository.name }}" >> $GITHUB_ENV
          echo GIT_ORG_NAME="${{ github.repository_owner }}" >> $GITHUB_ENV
#          export GIT_PR_NUMBER="${{ github.event.number }}" >> $GITHUB_ENV
      
      - name: Extract branch name
        if: github.event_name != 'pull_request'
        shell: bash
        run: |
          echo "BRANCH_NAME=$(echo ${GITHUB_REF#refs/heads/})" >> $GITHUB_ENV
          echo "TC_SANITY_EXECUTION='${{ secrets.TC_SANITY_EXECUTION }}' | sed 's/./& /g'" >> $GITHUB_ENV
          echo "PREFIX_TICKET_VALUE='${{ secrets.PREFIX_TICKET_VALUE }}' | sed 's/./& /g'" >> $GITHUB_ENV
          echo "AUTH_TOKEN='${{ secrets.AUTH_TOKEN }}' | sed 's/./& /g'" >> $GITHUB_ENV
          echo "FAIL_STATUS_TRANSITION='${{ secrets.FAIL_STATUS_TRANSITION }}' | sed 's/./& /g'" >> $GITHUB_ENV
          echo "JIRA_CONDITION='${{ secrets.JIRA_CONDITION }}' | sed 's/./& /g'" >> $GITHUB_ENV
          echo "JIRA_DOMAIN='${{ secrets.JIRA_DOMAIN }}' | sed 's/./& /g'" >> $GITHUB_ENV
          echo "PASS_STATUS_TRANSITION='${{ secrets.PASS_STATUS_TRANSITION }}' | sed 's/./& /g'" >> $GITHUB_ENV
          echo "TC_FUNCTIONAL_EXECUTION='${{ secrets.TC_FUNCTIONAL_EXECUTION }}' | sed 's/./& /g'" >> $GITHUB_ENV
          echo "TC_INTEGRATION_EXECUTION='${{ secrets.TC_INTEGRATION_EXECUTION }}' | sed 's/./& /g'" >> $GITHUB_ENV

      - name: Run Sanity cases
        if: github.event_name != 'event'
        run: |
          echo ${{ env.BRANCH_NAME }}
          echo ${{ env.GIT_ORG_NAME }}
          echo ${{ env.GIT_REPOSITORY_NAME }}
          echo ${{ env.TC_SANITY_EXECUTION }}
          echo ${{ env.PREFIX_TICKET_VALUE }}
          echo ${{ env.AUTH_TOKEN }}
          echo ${{ env.FAIL_STATUS_TRANSITION }}
          echo ${{ env.JIRA_CONDITION }}
          echo ${{ env.JIRA_DOMAIN }}
          echo ${{ env.PASS_STATUS_TRANSITION }}
          echo ${{ env.TC_FUNCTIONAL_EXECUTION }}
          echo ${{ env.TC_INTEGRATION_EXECUTION }}

      - name: Execute python3
        run: |
          pytest test_one.py
